@startuml

'Package Client'

package client{
        interface ComListener {
                # void onTrameReceived(String)
        }

        interface StateListener {
                + State : enum
                + void onStateChanged(State)
        }

        enum State{
                INITIAL
                CONNECTING
                CONNECTED
                DISCONNECTING
        }

        class Client {
                - m_com : CommunicationHandler
                - m_pseudo : String
                - m_connectWindow : ConnexionWindow
                - m_chatWindow : ChatClientWindow 
        }

        class CommunicationHandler {
                + {static} TIMEOUT : final int 
                - m_sock : Socket      
                - m_state : StateListener.State
                - m_stateListeners : ArrayList<StateListener>
                - m_comListeners : ArrayList<ComListener>
                - m_quit : boolean

                + void stop()
                - void changeState(StateListener.State)
                + StateListener.State getState()
                + CommunicationHandler()
                + addStateListener(StateListener)
                + addComListener(ComListener)
                + void configure(String, int)
                + void disconnect()
                + void post(String)
        }
}

'Fin Package client'

'Package IHMAuto'

package IHMAuto{
        interface ChatListener {
            + void askDeconnection()
            + void askInitialization()
            + void sendMessage(String)
            + void StatusChanged(int)
        }

        interface InfoConnectListener {
            + void askForConnect(String, String, int)
        }

        class ConnexionWindow {
        }

        class ChatClientWindow {
			+ void addMessage(String)
			+ void addUser(String)
			+ void supprMessage(String)
			+ void supprUser(String)
		}

        class ChatAdminWindow {
        }

        class ConnexionAdminWindow {
        }
}
'Fin package IHMAuto'


'Package server'

package server {
        interface IDataPool {
			+ ArrayList<String> getUserPool()
			+ ArrayList<String> getMessagePool()
        }

        class Server {
                - m_conversation : ArrayList<String>
                - m_userList : ArrayList<String>
                - m_adminList : ArrayList<String>
                - void interpret(String)
        }

        class ClientHandler {
        		- m_sock : Socket
				- m_pseudonym : String
				- m_isAdmin : boolean
				- void interpret(String)
				+ void post(String)
        }
}
'Fin package server'

StateListener<|--Client
ComListener<|--Client
ChatListener<|--Client
InfoConnectListener<|--Client
Runnable<|--CommunicationHandler
Client"1"*--CommunicationHandler
Client"1"*--ConnexionWindow
Client"1"*--ChatClientWindow
Client"1"*--ConnexionAdminWindow
Client"1"*--ChatAdminWindow
CommunicationHandler"1"*--"n"ComListener
ChatClientWindow"1"*--"n"ChatListener
ConnexionWindow"1"*--"n"InfoConnectListener

IDataPool<|--Server
ComListener<|--Server
Server"1"*--"n"ClientHandler
Runnable<|--ClientHandler
ClientHandler"1"*--"n"ComListener

@enduml